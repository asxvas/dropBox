options:

    #!############################################!
    #!       Please note this system             #!
    #!       only supports one dropbox           #!
    #!############################################!
    prefix: #Prefix of the messages
    c1: &f #Main color (accepts hex and rgb)
    c2: &c #Secondary color (accepts hex and rgb)

    cord1x: -405 #starting coordinates of the region (x)
    cord1z: 104 #starting coordinates of the region (y)

    y: 190 #y coord of which the drop is meant to start falling from

    cord2x: -493 #ending coordinates of the region (x)
    cord2z: 119 #ending coordinates of the region (y)
    
    world: "schems2" #world of which the dropbox happens 
    dropbox_delay: 45 minutes #time difference between each drop box event
    dropbox_despawn_delay: 1 minute and 30 seconds #time for when box despawns after it falls down to ground


    #the following items are the dropbox items, each number represents the slot in the chest (1-9). For each item just but the amount followed by 'of <item>'. Also accepts nbt data
    dropbox_1: 6 of ender pearl
    dropbox_2: 32 of golden apple
    dropbox_3: 64 of diamond
    dropbox_4: 32 of diamond
    dropbox_5: 16 of cobweb
    dropbox_6: 16 of arrow 
    dropbox_7: 48 of experience bottle
    dropbox_8: 1 of water bucket
    dropbox_9: 1 of netherite upgrade smithing template


function startDropBox():
    set {_x} to a random integer between {@cord1x} and {@cord2x}
    set {_y} to {@y}
    set {_z} to a random integer between {@cord1z} and {@cord2z}
    set {_world} to {@world}


    while block below block at location({_x}, {_y}, {_z}, world {_world}) is air:
        remove 1 from {_y}


    

    broadcast "{@prefix} {@c1}A supply box is spawning at {@c2}%{_x}%{@c1}, {@c2}%{_y}%{@c1}, {@c2}%{_z}%{@c1}!"
    set {dropbox::remaining} to now

    set {dropbox::x} to {_x}
    set {dropbox::final::y} to {_y}
    set {dropbox::z} to {_z}
    set {dropbox::world} to {_world}

    set {_loopamt} to {@y} - {_y}

    set {_y} to {@y}

    set {dropbox::inv} to chest inventory with 1 rows named "&4&lLoot Box"

    set slot 0 of {dropbox::inv} to {@dropbox_1}
    set slot 1 of {dropbox::inv} to {@dropbox_1}
    set slot 2 of {dropbox::inv} to {@dropbox_1}
    set slot 3 of {dropbox::inv} to {@dropbox_1}
    set slot 4 of {dropbox::inv} to {@dropbox_1}
    set slot 5 of {dropbox::inv} to {@dropbox_1}
    set slot 6 of {dropbox::inv} to {@dropbox_1}
    set slot 7 of {dropbox::inv} to {@dropbox_1}
    set slot 8 of {dropbox::inv} to {@dropbox_1}

    loop {_loopamt} times:

        #remove old supply drop
        set block at location({_x}, {_y} + 1, {_z}, world {_world}) to air

        set block at location({_x} -1 , {_y} + 2, {_z}, world {_world}) to air if block at location({_x} -1 , {_y} + 2, {_z}, world {_world}) is iron trapdoor
        set block at location({_x} + 1, {_y} + 2, {_z}, world {_world}) to air if block at location({_x} + 1, {_y} + 2, {_z}, world {_world}) is iron trapdoor
        set block at location({_x}, {_y} + 2, {_z} -1, world {_world}) to air if block at location({_x}, {_y} + 2, {_z} - 1, world {_world}) is iron trapdoor
        set block at location({_x}, {_y} + 2, {_z} + 1, world {_world}) to air if block at location({_x}, {_y} + 2, {_z} + 1, world {_world}) is iron trapdoor


        #new drop
        set {dropbox::y} to {_y}
        set block at location({_x}, {_y}, {_z}, world {_world}) to chest

        set block at location({_x} -1, {_y} + 1, {_z}, world {_world}) to iron trapdoor if block at location({_x} -1, {_y} + 1, {_z}, world {_world}) is air
        set block at location({_x} + 1, {_y} + 1, {_z}, world {_world}) to iron trapdoor if block at location({_x} + 1, {_y} + 1, {_z}, world {_world}) is air
        set block at location({_x}, {_y} + 1, {_z} - 1, world {_world}) to iron trapdoor if block at location({_x}, {_y} + 1, {_z} - 1, world {_world}) is air
        set block at location({_x}, {_y} + 1, {_z} + 1, world {_world}) to iron trapdoor if block at location({_x}, {_y} + 1, {_z} + 1, world {_world}) is air
        
        remove 1 from {_y}
        wait 5 ticks

    set block at location({_x} -1 , {_y} + 2, {_z}, world {_world}) to air if block at location({_x} -1 , {_y} + 2, {_z}, world {_world}) is iron trapdoor
    set block at location({_x} + 1, {_y} + 2, {_z}, world {_world}) to air if block at location({_x} + 1, {_y} + 2, {_z}, world {_world}) is iron trapdoor
    set block at location({_x}, {_y} + 2, {_z} -1, world {_world}) to air if block at location({_x}, {_y} + 2, {_z} - 1, world {_world}) is iron trapdoor
    set block at location({_x}, {_y} + 2, {_z} + 1, world {_world}) to air if block at location({_x}, {_y} + 2, {_z} + 1, world {_world}) is iron trapdoor


    set block at location({_x}, {_y} + 1, {_z}, world {_world}) to air

    set block at location({_x}, {_y}, {_z}, world {_world}) to chest    

    broadcast "{@prefix} {@c1}The supply box has spawned at {@c2}%{_x}%{@c1}, {@c2}%{_y}%{@c1}, {@c2}%{_z}%{@c1}!"
    launch ball large colored red fading to black at location({_x}, {_y} + 1, {_z}, world {_world})
    play sound "entity.firework_rocket.large_blast" with volume 3 and pitch 1.3 to all players

every 1 second:
    set {_time} to difference between now and {dropbox::lastdrop}
    if {dropbox::remaining} is not set:
        if {_time} >= {@dropbox_delay}:
            startDropBox()
    else:
        if difference between now and {dropbox::remaining} is more than {@dropbox_despawn_delay}:
            set block at location({dropbox::x}, {dropbox::final::y}, {dropbox::z}, world {dropbox::world}) to air
            delete {dropbox::*}
            delete {dropbox::remaining}
            set {dropbox::lastdrop} to now
            
            broadcast "{@prefix} {@c1}The supply box has despawned!"
            stop



command testdrop:
    permission: op
    trigger:
        startDropBox()

on right click on chest:
    set {_x} to floor(x-coord of block)
    set {_y} to floor(y-coord of block)
    set {_z} to floor(z-coord of block)

    if {_x} = {dropbox::x}:
        if {_z} = {dropbox::z}:
            if {_y} = {dropbox::y}:
                cancel event
            else if {_y} = {dropbox::final::y}:
                open {dropbox::inv} to event-player
                cancel event
